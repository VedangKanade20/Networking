Upd client server 
Right click open terminal 
Enter command :sudo apt update
Enter password 
Enter 

Now 
Enter command :sudo apt install build-essential 
Enter 

Now open files
Home 
Right click : new folder 
Name folder as Assignment 
Go inside the folder right click to open terminal 
Enter command : nano udp_server.c 
Enter

Now write the code :
udpserver.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 8080
#define BUFFER_SIZE 1024

int main() {
    int sockfd;
    char buffer[BUFFER_SIZE];
    struct sockaddr_in server_addr, client_addr;
    socklen_t len = sizeof(client_addr);

    // Create UDP socket
    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    // Configure server address
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = INADDR_ANY;
    server_addr.sin_port = htons(PORT);

    // Bind socket to the port
    if (bind(sockfd, (const struct sockaddr *)&server_addr, sizeof(server_addr)) < 0) {
        perror("Bind failed");
        close(sockfd);
        exit(EXIT_FAILURE);
    }

    printf("UDP Server listening on port %d...\n", PORT);

    // Receive message from client
    int n = recvfrom(sockfd, buffer, BUFFER_SIZE, 0,
                     (struct sockaddr *)&client_addr, &len);
    buffer[n] = '\0';
    printf("Client: %s\n", buffer);

    // Echo back the message to client
    sendto(sockfd, buffer, strlen(buffer), 0,
           (const struct sockaddr *)&client_addr, len);

    close(sockfd);
    return 0;
}




After righting code press ctrl + O and enter to exit
gcc udp_server.c -o udp_server



Now  client
Go inside the assignment folder right click to open terminal 
Enter command : nano udp_client.c 
Enter

Now right code 
Copy paste code 
udp_client.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define SERVER_IP "127.0.0.1"
#define PORT 8080
#define BUFFER_SIZE 1024

int main() {
    int sockfd;
    char buffer[BUFFER_SIZE];
    struct sockaddr_in server_addr;

    // Create UDP socket
    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    // Configure server address
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(PORT);
    inet_pton(AF_INET, SERVER_IP, &server_addr.sin_addr);

    // Read message from user
    fgets(buffer, BUFFER_SIZE, stdin);
    buffer[strcspn(buffer, "\n")] = 0; // remove newline

    // Send message to server
    sendto(sockfd, buffer, strlen(buffer), 0,
           (const struct sockaddr *)&server_addr, sizeof(server_addr));

    // Receive response from server
    int n = recvfrom(sockfd, buffer, BUFFER_SIZE, 0, NULL, NULL);
    buffer[n] = '\0';
    printf("Server: %s\n", buffer);

    close(sockfd);
    return 0;
}

After Righting code press ctrl+O to save and enter to exit

gcc udp_client.c -o udp_client
Now
Go inside the assignment folder right click to open terminal 
Enter command: gcc udp_server.c -o udp_server
Enter 
Enter command: gcc udp_client.c -o udp_client

Now
Go inside the assignment folder right click to open terminal 
In first terminal write: ./udp_client
Enter 

In second terminal write : ./udp_server
Enter 

Now in first terminal in enter message write : 
Hello server 
Press enter 

Will open the same in second terminal